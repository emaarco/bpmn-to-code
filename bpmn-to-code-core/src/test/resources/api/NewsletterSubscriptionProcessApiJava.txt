// Generated by bpmn-to-code
package de.emaarco.example;

import java.lang.String;

public final class NewsletterSubscriptionProcessApiV1 {
  public static final String PROCESS_ID = "newsletterSubscription";

  public static final class Elements {
    public static final String Timer_EveryDay = "Timer_EveryDay";

    public static final String Timer_After3Days = "Timer_After3Days";

    public static final String ErrorEvent_InvalidMail = "ErrorEvent_InvalidMail";

    public static final String Activity_ConfirmRegistration = "Activity_ConfirmRegistration";

    public static final String SubProcess_Confirmation = "SubProcess_Confirmation";

    public static final String EndEvent_RegistrationAborted = "EndEvent_RegistrationAborted";

    public static final String EndEvent_SubscriptionConfirmed = "EndEvent_SubscriptionConfirmed";

    public static final String EndEvent_RegistrationCompleted = "EndEvent_RegistrationCompleted";

    public static final String EndEvent_RegistrationNotPossible = "EndEvent_RegistrationNotPossible";

    public static final String Activity_AbortRegistration = "Activity_AbortRegistration";

    public static final String Activity_SendWelcomeMail = "Activity_SendWelcomeMail";

    public static final String Activity_SendConfirmationMail = "Activity_SendConfirmationMail";

    public static final String StartEvent_SubmitRegistrationForm = "StartEvent_SubmitRegistrationForm";

    public static final String StartEvent_RequestReceived = "StartEvent_RequestReceived";
  }

  public static final class Messages {
    public static final String Message_FormSubmitted = "Message_FormSubmitted";

    public static final String Message_SubscriptionConfirmed = "Message_SubscriptionConfirmed";
  }

  public static final class TaskTypes {
    public static final String EndEvent_RegistrationCompleted = "newsletter.registrationCompleted";

    public static final String Activity_AbortRegistration = "newsletter.abortRegistration";

    public static final String Activity_SendWelcomeMail = "newsletter.sendWelcomeMail";

    public static final String Activity_SendConfirmationMail = "newsletter.sendConfirmationMail";
  }

  public static final class Timers {
    public static final BpmnTimer Timer_EveryDay = new BpmnTimer("Duration", "PT1M");

    public static final BpmnTimer Timer_After3Days = new BpmnTimer("Duration", "PT2M30S");

    public static class BpmnTimer {
      public final String type;

      public final String timerValue;

      BpmnTimer(String type, String timerValue) {
        this.type = type;
        this.timerValue = timerValue;
      }
    }
  }

  public static final class Errors {
    public static final BpmnError Error_InvalidMail = new BpmnError("Error_InvalidMail", "500");

    public static class BpmnError {
      public final String name;

      public final String code;

      BpmnError(String name, String code) {
        this.name = name;
        this.code = code;
      }
    }
  }

  public static final class Signals {
    public static final String Signal_RegistrationNotPossible = "Signal_RegistrationNotPossible";
  }
}
